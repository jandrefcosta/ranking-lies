{"version":3,"sources":["Pages/NewUser/index.js","Services/index.js","Components/Popup/index.js"],"names":["NewUser","useState","formRegister","setFormRegister","history","useHistory","HandlerSubmit","e","a","preventDefault","Object","keys","length","PopupInfo","registerUser","data","error","push","HandlerChange","target","name","value","className","onSubmit","container","spacing","item","xs","fullWidth","label","type","onChange","justify","to","style","textDecoration","variant","color","axios","require","defaults","baseURL","interceptors","request","use","config","console","log","token","localStorage","getItem","headers","Authorization","post","login","registerLies","deleteLies","id","delete","listLies","get","icon","title","text","callback","Swal","fire","heightAuto","onAfterClose","PopupConfirmResponse","mixin","customClass","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then"],"mappings":"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","file":"static/js/8.ed10a946.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport { FormControl, TextField, Grid, Button } from '@material-ui/core'\r\n\r\nimport { registerUser } from '../../Services/'\r\nimport { PopupInfo } from '../../Components/Popup'\r\n\r\nimport './style.scss'\r\n\r\nfunction NewUser() {\r\n\r\n  const [formRegister, setFormRegister] = useState({})\r\n  const history = useHistory()\r\n\r\n  const HandlerSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (Object.keys(formRegister).length < 2) {\r\n      PopupInfo('warning', null, 'Preencha todos os dados')\r\n      return;\r\n    }\r\n\r\n    const data = await registerUser(formRegister);\r\n\r\n    if (data.error) {\r\n      PopupInfo('error', 'Oops...', data.error)\r\n    } else {\r\n      PopupInfo('success', 'Heeey', 'Registro realizado com sucesso', () => { history.push('/') })\r\n    }\r\n  }\r\n\r\n  const HandlerChange = (e) => {\r\n    const { target: { name, value } } = e\r\n    setFormRegister({ ...formRegister, [name]: value })\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"register-container\">\r\n      <h1>Novo Usu√°rio</h1>\r\n      <form onSubmit={HandlerSubmit}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <TextField name=\"email\" label=\"email\" type=\"email\" onChange={HandlerChange} />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <TextField name=\"senha\" label=\"senha\" type=\"password\" onChange={HandlerChange} />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid container item xs={12} justify=\"space-between\">\r\n            <Grid item >\r\n              <FormControl fullWidth>\r\n                <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                  <Button variant=\"contained\" color=\"secondary\"  > Voltar </Button>\r\n                </Link>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item >\r\n              <FormControl fullWidth>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\"> Cadastrar </Button>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewUser","const axios = require('axios');\r\n\r\naxios.defaults.baseURL = 'http://localhost:3033/';\r\n\r\n\r\naxios.interceptors.request.use(function (config) {\r\n  console.log(\"request\")\r\n  const token = localStorage.getItem('user_id');\r\n  config.headers.Authorization = token;\r\n  console.log(config)\r\n  return config;\r\n})\r\n\r\nexport const registerUser = async (request) => {\r\n  const { data, error } = await axios.post(\"/users\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const login = async (request) => {\r\n  const { data, error } = await axios.post(\"/sessions\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const registerLies = async (request) => {\r\n  const { data, error } = await axios.post(\"/lies\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const deleteLies = async (id) => {\r\n  const { data, error } = await axios.delete(`/lies/${id}`);\r\n  return data || error;\r\n}\r\n\r\nexport const listLies = async (request) => {\r\n  const { data, error } = await axios.get(\"/lies\", request);\r\n  return data || error;\r\n}","\r\nimport Swal from 'sweetalert2'\r\n\r\nimport './style.scss';\r\n\r\nexport const PopupInfo = (icon, title, text, callback) => {\r\n  Swal.fire({\r\n    heightAuto: false,\r\n    icon: icon,\r\n    title: title,\r\n    text: text,\r\n    onAfterClose: callback\r\n  })\r\n}\r\n\r\nexport const PopupConfirmResponse = (icon, title, text, callback) => {\r\n  Swal.mixin({\r\n    customClass: {\r\n      container: 'deep-class',\r\n    }\r\n  }).fire({\r\n    icon: icon,\r\n    title: title,\r\n    text: text,\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then(callback)\r\n}\r\n"],"sourceRoot":""}
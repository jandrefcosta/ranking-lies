{"version":3,"sources":["Pages/NewLie/index.js","Services/index.js","Components/Popup/index.js"],"names":["animatedComponents","makeAnimated","NewLie","useState","selectCategory","setSelectCategory","formRegisterLie","setFormRegisterLie","useEffect","console","log","HandlerChange","e","target","name","value","HandlerSubmit","a","preventDefault","undefined","PopupInfo","category","map","item","toLowerCase","request","Object","keys","length","registerLies","data","error","HandlerClearInputs","onSubmit","container","justify","xs","spacing","fullWidth","label","onChange","id","multiline","rows","variant","closeMenuOnSelect","components","options","isMulti","color","type","axios","require","defaults","baseURL","interceptors","use","config","token","localStorage","getItem","headers","Authorization","registerUser","post","login","deleteLies","delete","listLies","get","icon","title","text","callback","Swal","fire","heightAuto","onAfterClose","PopupConfirmResponse","mixin","customClass","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then"],"mappings":"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","file":"static/js/10.f79ca899.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FormControl, TextField, Grid, Button } from '@material-ui/core'\r\n\r\n//import Select from 'react-select'\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { PopupInfo } from '../../Components/Popup';\r\nimport { registerLies } from '../../Services';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nfunction NewLie() {\r\n\r\n  const [selectCategory, setSelectCategory] = useState()\r\n  const [formRegisterLie, setFormRegisterLie] = useState({})\r\n\r\n  const options = [\r\n    { value: 'dinheiro', label: 'Dinheiro' },\r\n    { value: 'esposa', label: 'Esposa' },\r\n    { value: 'trabalho', label: 'Trabalho' }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    console.log(selectCategory)\r\n  }, [selectCategory])\r\n\r\n  const HandlerChange = (e) => {\r\n    const { target: { name, value } } = e\r\n    setFormRegisterLie({ ...formRegisterLie, [name]: value })\r\n  }\r\n\r\n  const HandlerChangeSelect = (e) => {\r\n    console.log(e)\r\n    setSelectCategory(e)\r\n  }\r\n\r\n  const HandlerSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (selectCategory === undefined) {\r\n      PopupInfo('warning', null, 'Selecione pelo menos uma categoria')\r\n      return;\r\n    }\r\n    const category = selectCategory.map(item => { return item.value.toLowerCase() })\r\n    const request = { ...formRegisterLie, \"categorias\": category }\r\n    console.log(request)\r\n    console.log(Object.keys(request).length)\r\n    if (Object.keys(request).length < 3) {\r\n      PopupInfo('warning', null, 'Preencha todos os dados')\r\n      return;\r\n    }\r\n    const data = await registerLies(request);\r\n    if (data.error) {\r\n      PopupInfo('error', 'Oops...', data.error)\r\n    } else {\r\n      PopupInfo('success', 'Heeey', 'Registro realizado com sucesso', () => { HandlerClearInputs() })\r\n    }\r\n  }\r\n\r\n  const HandlerClearInputs = () => {\r\n    console.log(\"clear\")\r\n    setFormRegisterLie({})\r\n    setSelectCategory()\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <form onSubmit={HandlerSubmit}>\r\n        <Grid container justify=\"center\">\r\n          <Grid container item xs={6} spacing={4}>\r\n            <Grid item xs={12}>\r\n              <h1>Cadastrar nova mentira ?!</h1>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <TextField name=\"resumo\" label=\"resumo\" onChange={HandlerChange} />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"histÃ³ria da mentira\"\r\n                  name=\"descricao\"\r\n                  onChange={HandlerChange}\r\n                  multiline\r\n                  rows=\"6\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <FormControl fullWidth>\r\n                <CreatableSelect\r\n                  name=\"categoria\"\r\n                  closeMenuOnSelect={false}\r\n                  components={animatedComponents}\r\n                  options={options}\r\n                  onChange={HandlerChangeSelect}\r\n                  isMulti\r\n                >\r\n                </CreatableSelect>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"flex-end\">\r\n              <Grid item>\r\n                <FormControl fullWidth>\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\"> Adicionar </Button>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewLie","const axios = require('axios');\r\n\r\naxios.defaults.baseURL = 'http://localhost:3033/';\r\n\r\n\r\naxios.interceptors.request.use(function (config) {\r\n  console.log(\"request\")\r\n  const token = localStorage.getItem('user_id');\r\n  config.headers.Authorization = token;\r\n  console.log(config)\r\n  return config;\r\n})\r\n\r\nexport const registerUser = async (request) => {\r\n  const { data, error } = await axios.post(\"/users\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const login = async (request) => {\r\n  const { data, error } = await axios.post(\"/sessions\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const registerLies = async (request) => {\r\n  const { data, error } = await axios.post(\"/lies\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const deleteLies = async (id) => {\r\n  const { data, error } = await axios.delete(`/lies/${id}`);\r\n  return data || error;\r\n}\r\n\r\nexport const listLies = async (request) => {\r\n  const { data, error } = await axios.get(\"/lies\", request);\r\n  return data || error;\r\n}","\r\nimport Swal from 'sweetalert2'\r\n\r\nimport './style.scss';\r\n\r\nexport const PopupInfo = (icon, title, text, callback) => {\r\n  Swal.fire({\r\n    heightAuto: false,\r\n    icon: icon,\r\n    title: title,\r\n    text: text,\r\n    onAfterClose: callback\r\n  })\r\n}\r\n\r\nexport const PopupConfirmResponse = (icon, title, text, callback) => {\r\n  Swal.mixin({\r\n    customClass: {\r\n      container: 'deep-class',\r\n    }\r\n  }).fire({\r\n    icon: icon,\r\n    title: title,\r\n    text: text,\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then(callback)\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["Pages/Login/index.js","Services/index.js","Components/Popup/index.js"],"names":["Login","useState","formLogin","setFormLogin","history","useHistory","handlerLogin","e","a","console","log","Object","keys","length","PopupInfo","login","data","error","localStorage","setItem","id","push","HandlerChange","target","name","value","className","container","spacing","item","xs","fullWidth","label","type","onChange","justify","variant","color","onClick","to","axios","require","defaults","baseURL","interceptors","request","use","config","token","getItem","headers","Authorization","registerUser","post","registerLies","deleteLies","delete","listLies","get","icon","title","text","callback","Swal","fire","heightAuto","onAfterClose","PopupConfirmResponse","mixin","customClass","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then"],"mappings":"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","file":"static/js/7.61053ba9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { FormControl, TextField, Grid, Button } from '@material-ui/core'\r\n\r\nimport { PopupInfo } from '../../Components/Popup'\r\nimport { login } from '../../Services'\r\n\r\nimport './style.scss'\r\n\r\nfunction Login() {\r\n\r\n  const [formLogin, setFormLogin] = useState({})\r\n  const history = useHistory()\r\n\r\n  const handlerLogin = async (e) => {\r\n    console.log(formLogin)\r\n    if (Object.keys(formLogin).length < 2) {\r\n      PopupInfo('warning', null, 'Preencha todos os dados')\r\n      return;\r\n    }\r\n    const data = await login(formLogin)\r\n\r\n    if (data.error) {\r\n      PopupInfo('error', 'Oops...', data.error)\r\n    } else {\r\n      localStorage.setItem('user_id', data.id)\r\n      history.push('/list-lies')\r\n    }\r\n\r\n  }\r\n\r\n  const HandlerChange = (e) => {\r\n    const { target: { name, value } } = e\r\n    setFormLogin({ ...formLogin, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Qual a da vez?</h1>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <FormControl fullWidth>\r\n            <TextField name=\"email\" label=\"email\" type=\"email\" onChange={HandlerChange} />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl fullWidth>\r\n            <TextField name=\"senha\" label=\"senha\" type=\"password\" onChange={HandlerChange} />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n          <Grid item>\r\n            <FormControl fullWidth>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handlerLogin}> Entrar </Button>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n          <Grid item>\r\n            <FormControl fullWidth>\r\n              <Link to='/new-user'> NÃ£o tenho cadastro </Link>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div >\r\n  )\r\n}\r\nexport default Login;","const axios = require('axios');\r\n\r\naxios.defaults.baseURL = 'http://localhost:3033/';\r\n\r\n\r\naxios.interceptors.request.use(function (config) {\r\n  console.log(\"request\")\r\n  const token = localStorage.getItem('user_id');\r\n  config.headers.Authorization = token;\r\n  console.log(config)\r\n  return config;\r\n})\r\n\r\nexport const registerUser = async (request) => {\r\n  const { data, error } = await axios.post(\"/users\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const login = async (request) => {\r\n  const { data, error } = await axios.post(\"/sessions\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const registerLies = async (request) => {\r\n  const { data, error } = await axios.post(\"/lies\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const deleteLies = async (id) => {\r\n  const { data, error } = await axios.delete(`/lies/${id}`);\r\n  return data || error;\r\n}\r\n\r\nexport const listLies = async (request) => {\r\n  const { data, error } = await axios.get(\"/lies\", request);\r\n  return data || error;\r\n}","\r\nimport Swal from 'sweetalert2'\r\n\r\nimport './style.scss';\r\n\r\nexport const PopupInfo = (icon, title, text, callback) => {\r\n  Swal.fire({\r\n    heightAuto: false,\r\n    icon: icon,\r\n    title: title,\r\n    text: text,\r\n    onAfterClose: callback\r\n  })\r\n}\r\n\r\nexport const PopupConfirmResponse = (icon, title, text, callback) => {\r\n  Swal.mixin({\r\n    customClass: {\r\n      container: 'deep-class',\r\n    }\r\n  }).fire({\r\n    icon: icon,\r\n    title: title,\r\n    text: text,\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then(callback)\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["Pages/ListLies/index.js","Services/index.js","Components/Popup/index.js"],"names":["ListLies","useState","ranking","setRaking","userID","setUserId","open","setOpen","modalInformation","setModalInformation","useEffect","getListLies","localStorage","getItem","a","listLies","data","handleClose","callbackDelete","e","console","log","value","deleteLies","id","status","onClose","aria-labelledby","maxWidth","fullWidth","resumo","user_id","aria-label","onClick","PopupConfirmResponse","style","position","top","right","dividers","gutterBottom","descricao","autoFocus","color","className","variant","align","margin","marginTop","map","item","index","button","handleClickOpen","key","primary","axios","require","defaults","baseURL","interceptors","request","use","config","token","headers","Authorization","registerUser","post","error","login","registerLies","delete","get","PopupInfo","icon","title","text","callback","Swal","fire","heightAuto","onAfterClose","mixin","customClass","container","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then"],"mappings":"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","file":"static/js/9.82d2cb13.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { List, ListItem, ListItemIcon, ListItemText, Typography, Button, Modal } from '@material-ui/core'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\nimport { listLies, deleteLies } from '../../Services'\r\n\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\nimport { PopupConfirmResponse } from '../../Components/Popup';\r\n\r\nfunction ListLies() {\r\n\r\n  const [ranking, setRaking] = useState()\r\n  const [userID, setUserId] = useState()\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [modalInformation, setModalInformation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getListLies();\r\n    setUserId(localStorage.getItem('user_id'))\r\n  }, [])\r\n\r\n  const getListLies = async () => {\r\n    const data = await listLies();\r\n    setRaking(data)\r\n  }\r\n\r\n  const handleClickOpen = (e) => {\r\n    setModalInformation(e)\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    PopupConfirmResponse(\r\n      'warning',\r\n      'Deseja deletar a mentira ?',\r\n      \"Se deletar, nÃ£o teremos mais o registro!\",\r\n      callbackDelete\r\n    )\r\n  }\r\n\r\n  const callbackDelete = async (e) => {\r\n    console.log(modalInformation)\r\n    if (e.value) {\r\n      const { status } = await deleteLies(modalInformation.id)\r\n      if (status) {\r\n        getListLies()\r\n        setOpen(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} maxWidth=\"sm\" fullWidth>\r\n        <MuiDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          {modalInformation.resumo}\r\n          {userID === modalInformation.user_id && <IconButton aria-label=\"close\" onClick={handleDelete} style={{ position: 'absolute', top: \"10px\", right: \"10px\" }}>\r\n            <DeleteOutline />\r\n          </IconButton>}\r\n        </MuiDialogTitle >\r\n        <MuiDialogContent dividers>\r\n          <Typography gutterBottom >\r\n            {modalInformation.descricao}\r\n          </Typography>\r\n          <Typography>\r\n            <StarIcon />\r\n            <StarIcon />\r\n            <StarHalfIcon />\r\n            <StarBorderIcon />\r\n            <StarBorderIcon />\r\n          </Typography>\r\n        </MuiDialogContent>\r\n\r\n\r\n        <MuiDialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Fechar\r\n          </Button>\r\n        </MuiDialogActions>\r\n      </Dialog>\r\n\r\n      <div className=\"container\">\r\n        <Typography variant=\"h4\" align='center'>\r\n          Lista das principais gaitadas conhecidas\r\n        </Typography>\r\n        <List style={{ margin: \"0 auto\", marginTop: \"35px\", maxWidth: \"680px\" }}>\r\n          {ranking && ranking.map((item, index) => {\r\n            return (\r\n              <ListItem button onClick={(e) => handleClickOpen(item)} key={index}>\r\n                <ListItemIcon>\r\n                  <EmojiEventsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.resumo} />\r\n              </ListItem>\r\n            )\r\n          })}\r\n        </List>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListLies","const axios = require('axios');\r\n\r\naxios.defaults.baseURL = 'https://ranking-lies-server.herokuapp.com/';\r\n\r\n\r\naxios.interceptors.request.use(function (config) {\r\n  console.log(\"request\")\r\n  const token = localStorage.getItem('user_id');\r\n  config.headers.Authorization = token;\r\n  console.log(config)\r\n  return config;\r\n})\r\n\r\nexport const registerUser = async (request) => {\r\n  const { data, error } = await axios.post(\"/users\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const login = async (request) => {\r\n  const { data, error } = await axios.post(\"/sessions\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const registerLies = async (request) => {\r\n  const { data, error } = await axios.post(\"/lies\", request);\r\n  return data || error;\r\n}\r\n\r\nexport const deleteLies = async (id) => {\r\n  const { data, error } = await axios.delete(`/lies/${id}`);\r\n  return data || error;\r\n}\r\n\r\nexport const listLies = async (request) => {\r\n  const { data, error } = await axios.get(\"/lies\", request);\r\n  return data || error;\r\n}","\r\nimport Swal from 'sweetalert2'\r\n\r\nimport './style.scss';\r\n\r\nexport const PopupInfo = (icon, title, text, callback) => {\r\n  Swal.fire({\r\n    heightAuto: false,\r\n    icon: icon,\r\n    title: title,\r\n    text: text,\r\n    onAfterClose: callback\r\n  })\r\n}\r\n\r\nexport const PopupConfirmResponse = (icon, title, text, callback) => {\r\n  Swal.mixin({\r\n    customClass: {\r\n      container: 'deep-class',\r\n    }\r\n  }).fire({\r\n    icon: icon,\r\n    title: title,\r\n    text: text,\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then(callback)\r\n}\r\n"],"sourceRoot":""}